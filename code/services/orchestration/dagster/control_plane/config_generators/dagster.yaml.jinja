# configures the overall settings for the project,
# including logging, storage, execution parameters,
# instance-specific options, and runtime configurations,
# establishing global options that dictate how pipelines
# and resources operate consistently across environments.

scheduler:
  module: dagster.core.scheduler
  class: DagsterDaemonScheduler

run_coordinator:
  module: dagster.core.run_coordinator
  class: QueuedRunCoordinator

run_launcher:
  module: dagster_docker
  class: DockerRunLauncher
  config:
    env_vars:
      - DAGSTER_POSTGRES_USER
      - DAGSTER_POSTGRES_PASSWORD
      - DAGSTER_POSTGRES_DB
    network: {{ PIPELINE_NETWORK_NAME }}
    container_kwargs:
      volumes:
        /tmp/dagster_storage:
          bind: /opt/dagster/dagster_home/storage
          mode: rw
        /var/run/docker.sock:
          bind: /var/run/docker.sock
          mode: rw
      # https://github.com/dagster-io/dagster/discussions/9739
      auto_remove: true

run_storage:
  module: dagster_postgres.run_storage
  class: PostgresRunStorage
  config:
    postgres_db:
      hostname: dagster_postgres
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: {{ DAGSTER_POSTGRES_PORT }}

schedule_storage:
  module: dagster_postgres.schedule_storage
  class: PostgresScheduleStorage
  config:
    postgres_db:
      hostname: dagster_postgres
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: {{ DAGSTER_POSTGRES_PORT }}

event_log_storage:
  module: dagster_postgres.event_log
  class: PostgresEventLogStorage
  config:
    postgres_db:
      hostname: dagster_postgres
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: {{ DAGSTER_POSTGRES_PORT }}